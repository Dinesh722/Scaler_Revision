You are given two character strings A and B.
You have to find the first occurrence of string B in string A, as a substring, and return the starting position of first occurrence.
A substring is a contiguous sequence of characters within a string. For e.g "at" is a substring in "catalogue".

Input 1:
A = "aabababaa"
B = "ba"

Output 1:
3 

public class Solution {
    public int solve(String A, String B) {
        // return (A.indexOf(B)<0?-1:A.indexOf(B) + 1);
        int n = A.length();
        int m = B.length();
        char f = B.charAt(0);
        for(int i=0;i<n;i++){
            char x = A.charAt(i);
            if(x==f){
                int c = 0;
                // System.out.println("f "+i);
                for(int j=0;j<m;j++){
                    if(A.charAt(i)==B.charAt(j)){
                        c++;
                    }else{
                        i--; //this is because we re again checking from the current i, so decrementing i
                        break;
                    }
                    i++;
                }
                // System.out.println("e "+i);
                if(c==m){
                    return (i-m+1);
                    //if i is the end idx of B length
                    //then b.lenght - i
                    //since 1based idx +1
                }
            }
        }
        return -1;
    }
}

TC: O(n);
SC : O(1);
