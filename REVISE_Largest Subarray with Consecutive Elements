Given an array A of length N, with distinct integers.
Find length of the longest subarray which contains numbers that can be re - arranged in a continuous sequence.
A consecutive sequence of length X denotes a sequence with X elements such that all the adjacent pairs of elements have an absolute difference of 1.

Example Input
Input 1:
A = [10, 12, 11]
Input 2:
A = [1, 56, 58, 57, 90, 92, 94, 93, 91, 45]

Example Output
Output 1:
3
Output 2:
5

**********************************************
TC = O(n*n) //it is oki because the constraints are 10^3. Iteration can go upto 10^6 or 10^7
SC = O(1)

public class Solution {
    public int findSubarray(ArrayList<Integer> A) {
        int n = A.size();
        int ans = Integer.MIN_VALUE;
        for(int i=0;i<n;i++){
            int min = Integer.MAX_VALUE;
            int max = Integer.MIN_VALUE;
            for(int j=i;j<n;j++){
                min = Math.min(min,Math.min(A.get(i),A.get(j)));
                max = Math.max(max,Math.max(A.get(i),A.get(j)));
                if((max-min)==(j-i)){
                    // System.out.println("i="+i);
                    // System.out.println("j="+j);
                    // System.out.println();
                    ans = Math.max(ans,(j-i+1));
                }
            }
        }
        return ans;
    }
}
