Given an array of size N, find the subarray of size K with the least average.

A=[3, 7, 90, 20, 10, 50, 40]
B=3
op = 3(index)

***************************
//using pf[] get the sum
//iterate and get the min with size B

TC = O(n)
SC = O(n)
public class Solution {
    public int solve(ArrayList<Integer> A, int B) {
        int n = A.size();
        ArrayList<Integer> pf = new ArrayList<Integer>();
        prefixArray(pf,A);
        int ans = Integer.MAX_VALUE;
        int idx = -1;
        for(int i=0;i<n-B+1;i++){
            if(i==0){
                ans = Math.min(ans,pf.get(B-1));
                idx = 0;
            }else{
                int avg = pf.get(B+i-1) - pf.get(i-1);
                if(avg<ans){
                    ans = avg;
                    idx = i;
                }
            }
        }
        return idx;
    }

    public static void prefixArray(ArrayList<Integer> pf,ArrayList<Integer> A){
        pf.add(A.get(0));
        for(int i=1;i<A.size();i++){
            pf.add(pf.get(i-1)+A.get(i));
        }
    }
}
